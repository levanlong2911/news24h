---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Navbar from '../components/Navbar.astro';
import '../styles/global.css';
import HeaderAd from '../components/HeaderAd.astro';
import PositionAd from '../components/PositionAd.astro';


const {
  pageTitle = 'News hot 24h',
  pageDescription = 'Hot news, updated quickly and accurately every day.',
  pageImage = 'https://lifennew.com/default.jpg',
  pageUrl = 'https://lifennew.com',
  isArticle = false,
  publishedAt = '',
  updatedAt = '',
  authorName = 'News hot 24h',
} = Astro.props;

let headerAds: any[] = [];
try {
  const res = await fetch('https://admin.lifennew.com/api/ads?position=header');
  if (res.ok) {
    const json = await res.json();
    headerAds = json.data;
  }
} catch (err) {
  console.error('Header ads fetch failed:', err);
}

// function extractScripts(adScript: string) {
//   const scriptRegex = /<script[^>]*src=["']([^"']+)["'][^>]*><\/script>/gi;
//   const headScripts = [...adScript.matchAll(scriptRegex)].map(m => m[0]);
//   const bodyHtml = adScript.replace(scriptRegex, '');
//   return { headScripts, bodyHtml };
// }

// const topAds = adData
//   .filter(ad => ad.position === 'top')
//   .map(ad => extractScripts(ad.script));

// const middleAds = adData
//   .filter(ad => ad.position === 'middle')
//   .map(ad => ad.script);

// const bottomAds = adData
//   .filter(ad => ad.position === 'bottom')
//   .map(ad => ad.script);
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>

    <!-- SEO -->
    <meta name="description" content={pageDescription} />
    <link rel="canonical" href={pageUrl} />

    <!-- Open Graph -->
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:image" content={pageImage} />
    <meta property="og:url" content={pageUrl} />
    <meta property="og:type" content={isArticle ? 'article' : 'website'} />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={pageTitle} />
    <meta name="twitter:description" content={pageDescription} />
    <meta name="twitter:image" content={pageImage} />

    <!-- Structured Data -->
    {isArticle && (
      <script type="application/ld+json">
        {JSON.stringify({
          "@context": "https://schema.org",
          "@type": "NewsArticle",
          headline: pageTitle,
          image: [pageImage],
          datePublished: publishedAt,
          dateModified: updatedAt || publishedAt,
          author: [{ "@type": "Person", name: authorName }],
        })}
      </script>
    )}
    <HeaderAd ads={headerAds} />
  </head>
  <body>
    <Navbar />
	  <PositionAd position="top"/>
    <main>
      <slot />
    </main>

    <Footer />
    <script type="module" src="/scripts/menu.js"></script>
  </body>
</html>
