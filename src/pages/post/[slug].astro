---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Detail from '../../components/Detail.astro';
import Sidebar from '../../components/Sidebar.astro';
import type { Post } from '../../types';
export async function getStaticPaths() {
  const res = await fetch('https://lifennew.com/api/posts');
  if (!res.ok) {
    throw new Error(`Failed to fetch posts: ${res.status}`);
  }
  const json = await res.json();
  return json.data.map((post) => ({
    params: { slug: post.slug }
  }));
}

const { slug } = Astro.params;

const [postRes, listRes] = await Promise.all([
  fetch(`https://lifennew.com/api/posts/${slug}`),
  fetch('https://lifennew.com/api/posts')
]);

if (!postRes.ok) {
  throw new Error(`Failed to fetch post: ${postRes.status}`);
}
if (!listRes.ok) {
  throw new Error(`Failed to fetch posts list: ${listRes.status}`);
}

const post: Post = await postRes.json();
const postListJson = await listRes.json();
const posts : Post[] = Array.isArray(postListJson.data) ? postListJson.data : [];

const siteUrl = 'https://lifennew.com';
const postUrl = `${siteUrl}/post/${post.slug}`;
const postImage = post.thumbnail || 'https://lifennew.com/default.jpg';
const postDescription = post.description || post.title;
const relatedPosts = posts.filter(
  (p) => p.category?.id === post.category?.id && p.id !== post.id
);


// const post: Post = await postRes.json();
---

<BaseLayout
  pageTitle={post.title}
  pageDescription={post.description || post.title || 'Default Description'}
  pageImage={post.thumbnail || 'https://lifennew.com/default.jpg'}
  pageUrl={`https://lifennew.com/post/${post.slug}`}
  isArticle={true}
  publishedAt={post.created_at || ''}
  updatedAt={post.updated_at || post.created_at || ''}
  authorName={post.admin?.name || 'Unknown Author'}
>
  <div class="grid-container">
		<Detail post={post} relatedPosts={relatedPosts} />
		<Sidebar posts={posts} />
	</div>
</BaseLayout>